13 Mar 2012 22:25:54,391 INFO  ~ Starting C:\Benjamin\Projects\GoDutchTrip
13 Mar 2012 22:25:54,403 INFO  ~ Module crud is available (C:\Benjamin\Install\play-1.2.4\modules\crud)
13 Mar 2012 22:25:54,405 INFO  ~ Module secure is available (C:\Benjamin\Install\play-1.2.4\modules\secure)
13 Mar 2012 22:25:55,277 WARN  ~ You're running Play! in DEV mode
13 Mar 2012 22:25:55,431 INFO  ~ Listening for HTTP on port 9000 (Waiting a first request to start) ...
13 Mar 2012 22:26:13,954 DEBUG ~ Creating new CacheManager with default config
13 Mar 2012 22:26:13,959 DEBUG ~ Configuring ehcache from classpath.
13 Mar 2012 22:26:14,005 DEBUG ~ Configuring ehcache from ehcache.xml found in the classpath: jar:file:/C:/Benjamin/Install/play-1.2.4/framework/play-1.2.4.jar!/ehcache.xml
13 Mar 2012 22:26:14,013 DEBUG ~ Configuring ehcache from URL: jar:file:/C:/Benjamin/Install/play-1.2.4/framework/play-1.2.4.jar!/ehcache.xml
13 Mar 2012 22:26:14,013 DEBUG ~ Configuring ehcache from InputStream
13 Mar 2012 22:26:14,788 DEBUG ~ Ignoring ehcache attribute xmlns:xsi
13 Mar 2012 22:26:14,789 DEBUG ~ Ignoring ehcache attribute xsi:noNamespaceSchemaLocation
13 Mar 2012 22:26:14,827 DEBUG ~ Disk Store Path: C:\Users\ben\AppData\Local\Temp\
13 Mar 2012 22:26:15,383 DEBUG ~ propertiesString is null.
13 Mar 2012 22:26:15,540 DEBUG ~ No disk store path defined. Skipping disk store path conflict test.
13 Mar 2012 22:26:15,545 DEBUG ~ No CacheManagerEventListenerFactory class specified. Skipping...
13 Mar 2012 22:26:20,856 DEBUG ~ No BootstrapCacheLoaderFactory class specified. Skipping...
13 Mar 2012 22:26:20,857 DEBUG ~ CacheWriter factory not configured. Skipping...
13 Mar 2012 22:26:20,858 DEBUG ~ No CacheExceptionHandlerFactory class specified. Skipping...
13 Mar 2012 22:26:21,145 DEBUG ~ Initialized net.sf.ehcache.store.MemoryStore for play
13 Mar 2012 22:26:21,150 DEBUG ~ Initialised cache: play
13 Mar 2012 22:26:26,791 INFO  ~ Connected to jdbc:h2:mem:play;MODE=MYSQL;LOCK_MODE=0
13 Mar 2012 22:26:27,680 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:27,681 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:27,682 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:27,685 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@76f33280
13 Mar 2012 22:26:27,689 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@454e2c9c
13 Mar 2012 22:26:27,691 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@5d1eb50b
13 Mar 2012 22:26:27,695 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:27,696 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:27,697 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:27,701 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:27,701 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:27,702 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:27,707 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:27,708 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:27,709 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:27,712 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:27,713 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:27,713 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:27,717 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:27,719 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:27,719 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:27,725 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:27,725 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:27,726 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:27,730 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:27,731 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:27,732 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:27,736 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:27,737 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:27,741 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:27,742 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:27,745 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:27,746 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:27,748 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:27,749 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:27,752 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:27,752 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:27,755 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:27,756 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:27,759 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:27,760 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:27,760 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:27,762 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34e5307e
13 Mar 2012 22:26:27,765 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:27,765 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:27,766 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:27,767 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@51da6868
13 Mar 2012 22:26:27,769 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:27,769 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:27,771 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:27,772 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:27,775 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:27,776 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:27,778 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:27,779 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:27,781 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:27,782 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:27,783 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@387413e8
13 Mar 2012 22:26:27,785 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@32a88bc2
13 Mar 2012 22:26:27,788 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:27,791 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:27,792 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:27,797 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:27,798 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:27,798 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:27,800 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@48129552
13 Mar 2012 22:26:27,803 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:27,804 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:27,805 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:27,807 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:27,808 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:27,809 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:27,811 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@205eb650
13 Mar 2012 22:26:27,823 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:27,824 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:27,826 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6cd9c6e2
13 Mar 2012 22:26:27,828 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@5406f513
13 Mar 2012 22:26:27,836 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:27,837 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:27,839 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61a8a9e7
13 Mar 2012 22:26:27,840 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@780adb3f
13 Mar 2012 22:26:27,841 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@413f9276
13 Mar 2012 22:26:27,844 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@1704ebb
13 Mar 2012 22:26:27,849 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:27,850 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:27,851 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3da997a
13 Mar 2012 22:26:27,852 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4921a90
13 Mar 2012 22:26:27,852 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@140de648
13 Mar 2012 22:26:27,853 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c898b41
13 Mar 2012 22:26:27,854 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a15670a
13 Mar 2012 22:26:27,854 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31fc6b2
13 Mar 2012 22:26:27,854 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b2dd1b8
13 Mar 2012 22:26:27,855 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d2394f8
13 Mar 2012 22:26:27,924 INFO  ~ Hibernate Commons Annotations 3.2.0.Final
13 Mar 2012 22:26:27,960 INFO  ~ Hibernate 3.6.1.Final
13 Mar 2012 22:26:27,964 INFO  ~ hibernate.properties not found
13 Mar 2012 22:26:27,975 INFO  ~ Bytecode provider name : javassist
13 Mar 2012 22:26:27,980 INFO  ~ using JDK 1.4 java.sql.Timestamp handling
13 Mar 2012 22:26:28,243 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
13 Mar 2012 22:26:28,244 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
13 Mar 2012 22:26:28,246 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
13 Mar 2012 22:26:28,246 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
13 Mar 2012 22:26:28,271 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
13 Mar 2012 22:26:28,272 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
13 Mar 2012 22:26:28,275 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
13 Mar 2012 22:26:28,277 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
13 Mar 2012 22:26:28,279 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
13 Mar 2012 22:26:28,280 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
13 Mar 2012 22:26:28,281 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
13 Mar 2012 22:26:28,282 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
13 Mar 2012 22:26:28,283 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
13 Mar 2012 22:26:28,286 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
13 Mar 2012 22:26:28,287 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
13 Mar 2012 22:26:28,323 INFO  ~ Hibernate EntityManager 3.6.0.Final
13 Mar 2012 22:26:28,324 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:28,325 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:28,325 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:28,326 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@76f33280
13 Mar 2012 22:26:28,327 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@454e2c9c
13 Mar 2012 22:26:28,327 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@5d1eb50b
13 Mar 2012 22:26:28,328 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:28,328 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:28,331 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:28,334 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:28,335 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:28,336 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:28,336 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:28,337 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:28,337 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:28,338 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:28,338 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:28,339 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:28,349 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:28,350 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:28,350 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:28,351 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:28,351 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:28,351 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:28,352 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:28,352 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:28,353 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:28,354 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:28,354 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:28,355 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:28,355 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:28,356 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:28,356 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:28,357 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:28,357 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:28,358 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:28,358 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:28,358 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:28,359 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:28,359 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:28,360 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:28,360 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:28,360 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34e5307e
13 Mar 2012 22:26:28,361 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:28,361 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:28,362 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:28,362 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@51da6868
13 Mar 2012 22:26:28,363 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:28,363 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:28,364 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:28,364 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:28,365 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:28,365 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:28,366 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:28,366 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:28,367 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:28,367 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:28,368 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@387413e8
13 Mar 2012 22:26:28,368 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@32a88bc2
13 Mar 2012 22:26:28,369 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:28,369 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:28,370 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:28,370 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:28,371 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:28,371 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:28,372 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@48129552
13 Mar 2012 22:26:28,372 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:28,373 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:28,373 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:28,374 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:28,374 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:28,374 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:28,375 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@205eb650
13 Mar 2012 22:26:28,375 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:28,376 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:28,376 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6cd9c6e2
13 Mar 2012 22:26:28,377 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@5406f513
13 Mar 2012 22:26:28,377 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:28,378 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:28,378 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61a8a9e7
13 Mar 2012 22:26:28,379 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@780adb3f
13 Mar 2012 22:26:28,380 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@413f9276
13 Mar 2012 22:26:28,381 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@1704ebb
13 Mar 2012 22:26:28,382 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:28,383 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:28,383 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2891fa78
13 Mar 2012 22:26:28,384 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d2f117
13 Mar 2012 22:26:28,386 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@29d22104
13 Mar 2012 22:26:28,386 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2275a30f
13 Mar 2012 22:26:28,387 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59243f75
13 Mar 2012 22:26:28,387 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ac2480b
13 Mar 2012 22:26:28,388 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@907f8ba
13 Mar 2012 22:26:28,388 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a5a7ff7
13 Mar 2012 22:26:28,389 DEBUG ~ Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
13 Mar 2012 22:26:28,390 DEBUG ~ Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
13 Mar 2012 22:26:28,390 DEBUG ~ Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
13 Mar 2012 22:26:28,391 DEBUG ~ Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
13 Mar 2012 22:26:28,391 DEBUG ~ Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
13 Mar 2012 22:26:28,392 DEBUG ~ Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
13 Mar 2012 22:26:28,392 DEBUG ~ Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
13 Mar 2012 22:26:28,393 DEBUG ~ Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
13 Mar 2012 22:26:28,394 DEBUG ~ Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
13 Mar 2012 22:26:28,394 DEBUG ~ Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
13 Mar 2012 22:26:28,395 DEBUG ~ Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
13 Mar 2012 22:26:28,395 DEBUG ~ Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
13 Mar 2012 22:26:28,396 DEBUG ~ Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
13 Mar 2012 22:26:28,396 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
13 Mar 2012 22:26:28,397 DEBUG ~ Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
13 Mar 2012 22:26:29,052 TRACE ~ Starting secondPassCompile() processing
13 Mar 2012 22:26:29,219 DEBUG ~ Processing hbm.xml files
13 Mar 2012 22:26:29,220 DEBUG ~ Process annotated classes
13 Mar 2012 22:26:29,277 INFO  ~ Binding entity from annotated class: models.Person
13 Mar 2012 22:26:29,348 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
13 Mar 2012 22:26:29,398 DEBUG ~ Import with entity name Person
13 Mar 2012 22:26:29,405 INFO  ~ Bind entity models.Person on table PERSON
13 Mar 2012 22:26:29,480 TRACE ~ Processing annotations of models.Person.id
13 Mar 2012 22:26:29,491 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PERSON), mappingColumn=id, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,497 DEBUG ~ binding property id with lazy=false
13 Mar 2012 22:26:29,500 DEBUG ~ building SimpleValue for id
13 Mar 2012 22:26:29,503 DEBUG ~ Building property id
13 Mar 2012 22:26:29,507 TRACE ~ Cascading id with null
13 Mar 2012 22:26:29,508 TRACE ~ Bind @Id on id
13 Mar 2012 22:26:29,510 TRACE ~ Processing annotations of models.Person.firstName
13 Mar 2012 22:26:29,511 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PERSON), mappingColumn=FIRST_NAME, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,511 DEBUG ~ binding property firstName with lazy=false
13 Mar 2012 22:26:29,512 DEBUG ~ building SimpleValue for firstName
13 Mar 2012 22:26:29,513 DEBUG ~ Building property firstName
13 Mar 2012 22:26:29,513 TRACE ~ Cascading firstName with null
13 Mar 2012 22:26:29,514 TRACE ~ Processing annotations of models.Person.lastName
13 Mar 2012 22:26:29,515 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PERSON), mappingColumn=LAST_NAME, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,515 DEBUG ~ binding property lastName with lazy=false
13 Mar 2012 22:26:29,516 DEBUG ~ building SimpleValue for lastName
13 Mar 2012 22:26:29,516 DEBUG ~ Building property lastName
13 Mar 2012 22:26:29,517 TRACE ~ Cascading lastName with null
13 Mar 2012 22:26:29,519 INFO  ~ Binding entity from annotated class: models.security.User
13 Mar 2012 22:26:29,522 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='id', referencedColumn='null', mappedBy='null'}
13 Mar 2012 22:26:29,523 TRACE ~ Subclass joined column(s) created
13 Mar 2012 22:26:29,523 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
13 Mar 2012 22:26:29,524 DEBUG ~ Import with entity name User
13 Mar 2012 22:26:29,525 INFO  ~ Bind entity models.security.User on table USER
13 Mar 2012 22:26:29,582 TRACE ~ Processing annotations of models.security.User.guest
13 Mar 2012 22:26:29,582 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=guest, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,583 DEBUG ~ binding property guest with lazy=false
13 Mar 2012 22:26:29,583 DEBUG ~ building SimpleValue for guest
13 Mar 2012 22:26:29,584 DEBUG ~ Building property guest
13 Mar 2012 22:26:29,584 TRACE ~ Cascading guest with null
13 Mar 2012 22:26:29,585 TRACE ~ Processing annotations of models.security.User.password
13 Mar 2012 22:26:29,585 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=PASSWORD, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,585 DEBUG ~ binding property password with lazy=false
13 Mar 2012 22:26:29,586 DEBUG ~ building SimpleValue for password
13 Mar 2012 22:26:29,586 DEBUG ~ Building property password
13 Mar 2012 22:26:29,587 TRACE ~ Cascading password with null
13 Mar 2012 22:26:29,587 TRACE ~ Processing annotations of models.security.User.roles
13 Mar 2012 22:26:29,589 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=null, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,911 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=element, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,915 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,919 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
13 Mar 2012 22:26:29,936 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='USER_ID', referencedColumn='', mappedBy=''}
13 Mar 2012 22:26:29,937 DEBUG ~ Binding column: Ejb3JoinColumn{logicalColumnName='ROLE_ID', referencedColumn='', mappedBy=''}
13 Mar 2012 22:26:29,938 DEBUG ~ Collection role: models.security.User.roles
13 Mar 2012 22:26:29,945 DEBUG ~ Building property roles
13 Mar 2012 22:26:29,946 TRACE ~ Cascading roles with none
13 Mar 2012 22:26:29,946 TRACE ~ Processing annotations of models.security.User.username
13 Mar 2012 22:26:29,947 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER), mappingColumn=USER_NAME, insertable=true, updatable=true, unique=true}
13 Mar 2012 22:26:29,947 DEBUG ~ binding property username with lazy=false
13 Mar 2012 22:26:29,948 DEBUG ~ building SimpleValue for username
13 Mar 2012 22:26:29,948 DEBUG ~ Building property username
13 Mar 2012 22:26:29,949 TRACE ~ Cascading username with null
13 Mar 2012 22:26:29,949 INFO  ~ Binding entity from annotated class: models.security.Role
13 Mar 2012 22:26:29,952 DEBUG ~ Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
13 Mar 2012 22:26:29,953 DEBUG ~ no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
13 Mar 2012 22:26:29,958 DEBUG ~ Import with entity name Role
13 Mar 2012 22:26:29,958 INFO  ~ Bind entity models.security.Role on table ROLE
13 Mar 2012 22:26:29,961 TRACE ~ Processing annotations of models.security.Role.id
13 Mar 2012 22:26:29,962 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLE), mappingColumn=id, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,963 DEBUG ~ binding property id with lazy=false
13 Mar 2012 22:26:29,963 DEBUG ~ building SimpleValue for id
13 Mar 2012 22:26:29,964 DEBUG ~ Building property id
13 Mar 2012 22:26:29,964 TRACE ~ Cascading id with null
13 Mar 2012 22:26:29,964 TRACE ~ Bind @Id on id
13 Mar 2012 22:26:29,965 TRACE ~ Processing annotations of models.security.Role.description
13 Mar 2012 22:26:29,965 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLE), mappingColumn=DESCRIPTION, insertable=true, updatable=true, unique=false}
13 Mar 2012 22:26:29,966 DEBUG ~ binding property description with lazy=false
13 Mar 2012 22:26:29,966 DEBUG ~ building SimpleValue for description
13 Mar 2012 22:26:29,966 DEBUG ~ Building property description
13 Mar 2012 22:26:29,967 TRACE ~ Cascading description with null
13 Mar 2012 22:26:29,967 TRACE ~ Processing annotations of models.security.Role.name
13 Mar 2012 22:26:29,973 DEBUG ~ Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLE), mappingColumn=NAME, insertable=true, updatable=true, unique=true}
13 Mar 2012 22:26:29,974 DEBUG ~ binding property name with lazy=false
13 Mar 2012 22:26:29,975 DEBUG ~ building SimpleValue for name
13 Mar 2012 22:26:29,976 DEBUG ~ Building property name
13 Mar 2012 22:26:29,976 TRACE ~ Cascading name with null
13 Mar 2012 22:26:29,977 DEBUG ~ Setting SimpleValue typeName for id
13 Mar 2012 22:26:29,979 DEBUG ~ Setting SimpleValue typeName for firstName
13 Mar 2012 22:26:29,980 DEBUG ~ Setting SimpleValue typeName for lastName
13 Mar 2012 22:26:29,980 DEBUG ~ Setting SimpleValue typeName for guest
13 Mar 2012 22:26:29,981 DEBUG ~ Setting SimpleValue typeName for password
13 Mar 2012 22:26:29,981 DEBUG ~ Setting SimpleValue typeName for username
13 Mar 2012 22:26:29,981 DEBUG ~ Setting SimpleValue typeName for id
13 Mar 2012 22:26:29,982 DEBUG ~ Setting SimpleValue typeName for description
13 Mar 2012 22:26:29,983 DEBUG ~ Setting SimpleValue typeName for name
13 Mar 2012 22:26:29,985 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
13 Mar 2012 22:26:29,989 DEBUG ~ processing extends queue
13 Mar 2012 22:26:29,990 DEBUG ~ processing extends queue
13 Mar 2012 22:26:29,990 DEBUG ~ processing collection mappings
13 Mar 2012 22:26:29,990 DEBUG ~ Second pass for collection: models.security.User.roles
13 Mar 2012 22:26:29,991 DEBUG ~ Binding as ManyToMany: models.security.User.roles
13 Mar 2012 22:26:30,010 DEBUG ~ Mapped collection key: USER_ID, element: ROLE_ID
13 Mar 2012 22:26:30,011 DEBUG ~ processing native query and ResultSetMapping mappings
13 Mar 2012 22:26:30,011 DEBUG ~ processing association property references
13 Mar 2012 22:26:30,012 DEBUG ~ processing foreign key constraints
13 Mar 2012 22:26:30,012 DEBUG ~ resolving reference to class: models.Person
13 Mar 2012 22:26:30,012 DEBUG ~ resolving reference to class: models.security.Role
13 Mar 2012 22:26:30,013 DEBUG ~ resolving reference to class: models.security.User
13 Mar 2012 22:26:30,039 INFO  ~ Hibernate Validator not found: ignoring
13 Mar 2012 22:26:30,167 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.security.User.
13 Mar 2012 22:26:30,171 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.security.User.
13 Mar 2012 22:26:30,174 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.security.User.
13 Mar 2012 22:26:30,176 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.security.Role.
13 Mar 2012 22:26:30,179 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.security.Role.
13 Mar 2012 22:26:30,180 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.security.Role.
13 Mar 2012 22:26:30,182 DEBUG ~ Adding _saveAttachment as PostPersist callback for entity models.Person.
13 Mar 2012 22:26:30,184 DEBUG ~ Adding _saveAttachment as PostUpdate callback for entity models.Person.
13 Mar 2012 22:26:30,185 DEBUG ~ Adding _setupAttachment as PostLoad callback for entity models.Person.
13 Mar 2012 22:26:30,246 DEBUG ~ No JNDI name configured for binding Ejb3Configuration
13 Mar 2012 22:26:30,301 DEBUG ~ Preparing to build session factory with filters : {}
13 Mar 2012 22:26:30,302 TRACE ~ Starting secondPassCompile() processing
13 Mar 2012 22:26:30,303 DEBUG ~ Processing hbm.xml files
13 Mar 2012 22:26:30,304 DEBUG ~ Process annotated classes
13 Mar 2012 22:26:30,305 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
13 Mar 2012 22:26:30,306 DEBUG ~ processing extends queue
13 Mar 2012 22:26:30,307 DEBUG ~ processing extends queue
13 Mar 2012 22:26:30,308 DEBUG ~ processing collection mappings
13 Mar 2012 22:26:30,309 DEBUG ~ processing native query and ResultSetMapping mappings
13 Mar 2012 22:26:30,310 DEBUG ~ processing association property references
13 Mar 2012 22:26:30,311 DEBUG ~ processing foreign key constraints
13 Mar 2012 22:26:30,312 DEBUG ~ resolving reference to class: models.Person
13 Mar 2012 22:26:30,312 DEBUG ~ resolving reference to class: models.security.Role
13 Mar 2012 22:26:30,313 DEBUG ~ resolving reference to class: models.security.User
13 Mar 2012 22:26:30,320 DEBUG ~ Legacy Validator not present in classpath, ignoring event listener registration
13 Mar 2012 22:26:30,331 DEBUG ~ Search not present in classpath, ignoring event listener registration.
13 Mar 2012 22:26:30,332 INFO  ~ Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
13 Mar 2012 22:26:30,345 INFO  ~ Initializing connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
13 Mar 2012 22:26:30,349 INFO  ~ Using provided datasource
13 Mar 2012 22:26:30,365 INFO  ~ Database ->
       name : H2
    version : 1.3.149 (2011-01-07)
      major : 1
      minor : 3
13 Mar 2012 22:26:30,365 INFO  ~ Driver ->
       name : H2 JDBC Driver
    version : 1.3.149 (2011-01-07)
      major : 1
      minor : 3
13 Mar 2012 22:26:30,412 INFO  ~ Using dialect: org.hibernate.dialect.H2Dialect
13 Mar 2012 22:26:30,449 INFO  ~ Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13 Mar 2012 22:26:30,456 INFO  ~ Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory
13 Mar 2012 22:26:30,459 INFO  ~ No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
13 Mar 2012 22:26:30,459 INFO  ~ Automatic flush during beforeCompletion(): disabled
13 Mar 2012 22:26:30,460 INFO  ~ Automatic session close at end of transaction: disabled
13 Mar 2012 22:26:30,460 INFO  ~ JDBC batch size: 15
13 Mar 2012 22:26:30,460 INFO  ~ JDBC batch updates for versioned data: disabled
13 Mar 2012 22:26:30,461 INFO  ~ Scrollable result sets: enabled
13 Mar 2012 22:26:30,462 DEBUG ~ Wrap result sets: disabled
13 Mar 2012 22:26:30,462 INFO  ~ JDBC3 getGeneratedKeys(): enabled
13 Mar 2012 22:26:30,463 INFO  ~ Connection release mode: auto
13 Mar 2012 22:26:30,464 INFO  ~ Default batch fetch size: 1
13 Mar 2012 22:26:30,465 INFO  ~ Generate SQL with comments: disabled
13 Mar 2012 22:26:30,465 INFO  ~ Order SQL updates by primary key: disabled
13 Mar 2012 22:26:30,466 INFO  ~ Order SQL inserts for batching: disabled
13 Mar 2012 22:26:30,466 INFO  ~ Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
13 Mar 2012 22:26:30,470 INFO  ~ Using ASTQueryTranslatorFactory
13 Mar 2012 22:26:30,470 INFO  ~ Query language substitutions: {}
13 Mar 2012 22:26:30,471 INFO  ~ JPA-QL strict compliance: enabled
13 Mar 2012 22:26:30,471 INFO  ~ Second-level cache: enabled
13 Mar 2012 22:26:30,471 INFO  ~ Query cache: disabled
13 Mar 2012 22:26:30,472 INFO  ~ Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
13 Mar 2012 22:26:30,474 INFO  ~ Optimize cache for minimal puts: disabled
13 Mar 2012 22:26:30,475 INFO  ~ Structured second-level cache entries: disabled
13 Mar 2012 22:26:30,477 TRACE ~ Using dialect defined converter
13 Mar 2012 22:26:30,500 INFO  ~ Statistics: disabled
13 Mar 2012 22:26:30,501 INFO  ~ Deleted entity synthetic identifier rollback: disabled
13 Mar 2012 22:26:30,501 INFO  ~ Default entity-mode: pojo
13 Mar 2012 22:26:30,502 INFO  ~ Named query checking : enabled
13 Mar 2012 22:26:30,502 INFO  ~ Check Nullability in Core (should be disabled when Bean Validation is on): enabled
13 Mar 2012 22:26:30,564 INFO  ~ building session factory
13 Mar 2012 22:26:30,582 DEBUG ~ Statistics initialized [enabled=false]}
13 Mar 2012 22:26:30,583 TRACE ~ Scoping types to session factory org.hibernate.impl.SessionFactoryImpl@1e42d5a
13 Mar 2012 22:26:30,584 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:30,584 DEBUG ~ Adding type registration boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:30,587 DEBUG ~ Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b7adb4a
13 Mar 2012 22:26:30,587 DEBUG ~ Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@76f33280
13 Mar 2012 22:26:30,598 DEBUG ~ Adding type registration true_false -> org.hibernate.type.TrueFalseType@454e2c9c
13 Mar 2012 22:26:30,598 DEBUG ~ Adding type registration yes_no -> org.hibernate.type.YesNoType@5d1eb50b
13 Mar 2012 22:26:30,599 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:30,599 DEBUG ~ Adding type registration byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:30,599 DEBUG ~ Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ce345c2
13 Mar 2012 22:26:30,599 DEBUG ~ Adding type registration character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:30,600 DEBUG ~ Adding type registration char -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:30,600 DEBUG ~ Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35e5ebbf
13 Mar 2012 22:26:30,600 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:30,601 DEBUG ~ Adding type registration short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:30,601 DEBUG ~ Adding type registration java.lang.Short -> org.hibernate.type.ShortType@665ea4c5
13 Mar 2012 22:26:30,665 DEBUG ~ Adding type registration integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:30,665 DEBUG ~ Adding type registration int -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:30,666 DEBUG ~ Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38178991
13 Mar 2012 22:26:30,666 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:30,667 DEBUG ~ Adding type registration long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:30,667 DEBUG ~ Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aa30a4e
13 Mar 2012 22:26:30,667 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:30,668 DEBUG ~ Adding type registration float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:30,668 DEBUG ~ Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56e88e24
13 Mar 2012 22:26:30,668 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:30,669 DEBUG ~ Adding type registration double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:30,669 DEBUG ~ Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@75da931b
13 Mar 2012 22:26:30,669 DEBUG ~ Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:30,669 DEBUG ~ Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7de6385e
13 Mar 2012 22:26:30,670 DEBUG ~ Adding type registration big_integer -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:30,670 DEBUG ~ Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@645064f
13 Mar 2012 22:26:30,670 DEBUG ~ Adding type registration string -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:30,671 DEBUG ~ Adding type registration java.lang.String -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:26:30,671 DEBUG ~ Adding type registration url -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:30,671 DEBUG ~ Adding type registration java.net.URL -> org.hibernate.type.UrlType@40545646
13 Mar 2012 22:26:30,672 DEBUG ~ Adding type registration date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:30,672 DEBUG ~ Adding type registration java.sql.Date -> org.hibernate.type.DateType@35afe17b
13 Mar 2012 22:26:30,672 DEBUG ~ Adding type registration time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:30,672 DEBUG ~ Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ce84763
13 Mar 2012 22:26:30,673 DEBUG ~ Adding type registration timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:30,673 DEBUG ~ Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:30,674 DEBUG ~ Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a281902
13 Mar 2012 22:26:30,674 DEBUG ~ Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34e5307e
13 Mar 2012 22:26:30,674 DEBUG ~ Adding type registration calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:30,675 DEBUG ~ Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:30,675 DEBUG ~ Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74e22632
13 Mar 2012 22:26:30,675 DEBUG ~ Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@51da6868
13 Mar 2012 22:26:30,680 DEBUG ~ Adding type registration locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:30,681 DEBUG ~ Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@790f2f3c
13 Mar 2012 22:26:30,681 DEBUG ~ Adding type registration currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:30,682 DEBUG ~ Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f74f6ef
13 Mar 2012 22:26:30,682 DEBUG ~ Adding type registration timezone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:30,682 DEBUG ~ Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3de5627c
13 Mar 2012 22:26:30,683 DEBUG ~ Adding type registration class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:30,683 DEBUG ~ Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52988dd6
13 Mar 2012 22:26:30,683 DEBUG ~ Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:30,684 DEBUG ~ Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e34d46a
13 Mar 2012 22:26:30,684 DEBUG ~ Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@387413e8
13 Mar 2012 22:26:30,684 DEBUG ~ Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@32a88bc2
13 Mar 2012 22:26:30,684 DEBUG ~ Adding type registration binary -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:30,685 DEBUG ~ Adding type registration byte[] -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:30,685 DEBUG ~ Adding type registration [B -> org.hibernate.type.BinaryType@2453f89f
13 Mar 2012 22:26:30,691 DEBUG ~ Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:30,692 DEBUG ~ Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:30,692 DEBUG ~ Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22fff2a2
13 Mar 2012 22:26:30,693 DEBUG ~ Adding type registration image -> org.hibernate.type.ImageType@48129552
13 Mar 2012 22:26:30,693 DEBUG ~ Adding type registration characters -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:30,693 DEBUG ~ Adding type registration char[] -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:30,694 DEBUG ~ Adding type registration [C -> org.hibernate.type.CharArrayType@65454f68
13 Mar 2012 22:26:30,694 DEBUG ~ Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:30,694 DEBUG ~ Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:30,695 DEBUG ~ Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d1d2b8
13 Mar 2012 22:26:30,695 DEBUG ~ Adding type registration text -> org.hibernate.type.TextType@205eb650
13 Mar 2012 22:26:30,695 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:30,696 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:30,696 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6cd9c6e2
13 Mar 2012 22:26:30,697 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@5406f513
13 Mar 2012 22:26:30,697 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:30,698 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:30,698 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61a8a9e7
13 Mar 2012 22:26:30,699 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@780adb3f
13 Mar 2012 22:26:30,699 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@413f9276
13 Mar 2012 22:26:30,700 DEBUG ~ Adding type registration serializable -> org.hibernate.type.SerializableType@1704ebb
13 Mar 2012 22:26:30,700 DEBUG ~ Adding type registration object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:30,700 DEBUG ~ Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26114629
13 Mar 2012 22:26:30,701 DEBUG ~ Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15a6c214
13 Mar 2012 22:26:30,701 DEBUG ~ Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@770fba26
13 Mar 2012 22:26:30,701 DEBUG ~ Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@298651db
13 Mar 2012 22:26:30,702 DEBUG ~ Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31681629
13 Mar 2012 22:26:30,702 DEBUG ~ Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2886f716
13 Mar 2012 22:26:30,702 DEBUG ~ Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34c7da23
13 Mar 2012 22:26:30,703 DEBUG ~ Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2cc24ae7
13 Mar 2012 22:26:30,703 DEBUG ~ Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c39aa6
13 Mar 2012 22:26:30,703 DEBUG ~ Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@b6e14f9
13 Mar 2012 22:26:30,704 INFO  ~ Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@5406f513
13 Mar 2012 22:26:30,704 DEBUG ~ Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@d09099d
13 Mar 2012 22:26:30,704 INFO  ~ Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@780adb3f
13 Mar 2012 22:26:30,705 DEBUG ~ Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4c56291a
13 Mar 2012 22:26:30,705 INFO  ~ Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@413f9276
13 Mar 2012 22:26:30,705 DEBUG ~ Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d090c56
13 Mar 2012 22:26:30,706 INFO  ~ Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@61a8a9e7
13 Mar 2012 22:26:30,706 DEBUG ~ Adding type registration clob -> org.hibernate.type.ClobType@6822ed4b
13 Mar 2012 22:26:30,706 INFO  ~ Type registration [clob] overrides previous : org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:30,707 DEBUG ~ Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6822ed4b
13 Mar 2012 22:26:30,707 INFO  ~ Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@1c52ac68
13 Mar 2012 22:26:30,708 DEBUG ~ Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b79d47f
13 Mar 2012 22:26:30,708 INFO  ~ Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@6cd9c6e2
13 Mar 2012 22:26:30,709 DEBUG ~ Adding type registration blob -> org.hibernate.type.BlobType@2cf0a755
13 Mar 2012 22:26:30,709 INFO  ~ Type registration [blob] overrides previous : org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:30,710 DEBUG ~ Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cf0a755
13 Mar 2012 22:26:30,710 INFO  ~ Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@24164d75
13 Mar 2012 22:26:30,752 DEBUG ~ Session factory constructed with filter configurations : {}
13 Mar 2012 22:26:30,753 DEBUG ~ instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.6.0_25\jre\bin, java.vm.version=20.0-b11, java.vm.vendor=Sun Microsystems Inc., java.vendor.url=http://java.sun.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Benjamin\Projects\GoDutchTrip, java.runtime.version=1.6.0_25-b06, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jdk1.6.0_25\jre\lib\endorsed, os.arch=amd64, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\ben\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Sun Microsystems Inc., user.variant=, os.name=Windows 7, play.debug=yes, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.6.0_25\bin;.;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Dell\DW WLAN Card;C:\Benjamin\Softwares\Java\Ant\apache-ant-1.8.2-bin\apache-ant-1.8.2\bin;C:\Program Files\Java\jdk1.6.0_25/bin;C:\PROGRA~2\IBM\SQLLIB\BIN;C:\PROGRA~2\IBM\SQLLIB\FUNCTION;C:\Program Files\SlikSvn\bin;C:\Benjamin\apps\yii-1.1.8\framework;C:\wamp\bin\php\php5.3.4;C:\parallel;C:\Benjamin\Softwares\Java\grails\grails-2.0.0\bin;C:\Benjamin\Softwares\Java\groovy\groovy-1.8.2\bin;C:\Benjamin\Courses\Net\nmap-5.51;C:\Program Files (x86)\KDiff3;C:\Benjamin\Install\play-1.2.4;C:\Program Files (x86)\Nmap, java.specification.name=Java Platform API Specification, java.class.version=50.0, play.id=test, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory, os.version=6.1, user.home=C:\Users\ben, user.timezone=America/Chicago, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.6, file.encoding=utf-8, com.mchange.v2.log.MLog=com.mchange.v2.log.FallbackMLog, user.name=ben, java.class.path=C:\Benjamin\Projects\GoDutchTrip\conf;C:\Benjamin\Install\play-1.2.4\framework\play-1.2.4.jar;C:\Benjamin\Install\play-1.2.4\modules\testrunner\lib\play-testrunner.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\activation-1.1.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\antlr-2.7.6.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\asm-all-3.3.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\async-http-client-1.6.5.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\bcprov-jdk15-1.45.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\c3p0-0.9.1.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\cglib-nodep-2.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-beanutils-1.8.3.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-codec-1.4.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-collections-3.2.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-email-1.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-fileupload-1.2.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-io-2.0.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-javaflow-1066591.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-lang-2.6.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\commons-logging-1.1.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\dom4j-1.6.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\ehcache-core-2.0.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\ezmorph-1.0.3.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\geronimo-servlet_2.5_spec-1.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\groovy-all-1.7.10.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\gson-1.7.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\h2-1.3.149.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\hibernate-commons-annotations-3.2.0.Final.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\hibernate-core-3.6.1.Final.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\hibernate-entitymanager-3.6.0.Final.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\hibernate-jpa-2.0-api-1.0.0.Final.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\ivy-2.2.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jamon-2.7.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\javassist-3.9.0.GA.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\javax.inject-1.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jaxen-1.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jj-imaging.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jj-simplecaptcha.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jj-textile.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jj-wikitext.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\joda-time-2.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jregex-1.2_01.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jsr107cache-1.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\jta-1.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\junit-4.8.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\log4j-1.2.16.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\mail-1.4.3.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\memcached-2.6.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\mysql-connector-java-5.1.13.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\netty-3.2.5.Final.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\org.eclipse.jdt.core-3.8.0.v_C03.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\oval-1.50.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\postgresql-9.0.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\signpost-core-1.2.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\slf4j-api-1.6.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\slf4j-log4j12-1.6.1.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\snakeyaml-1.7.jar;C:\Benjamin\Install\play-1.2.4\framework\lib\xstream-1.3.jar;C:\Benjamin\Install\play-1.2.4\framework/play-1.2.4.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, com.mchange.v2.log.FallbackMLog.DEFAULT_CUTOFF_LEVEL=OFF, java.vm.specification.version=1.0, javax.persistence.transaction=RESOURCE_LOCAL, sun.arch.data.model=64, java.home=C:\Program Files\Java\jdk1.6.0_25\jre, sun.java.command=play.server.Server , hibernate.dialect=org.hibernate.dialect.H2Dialect, java.specification.vendor=Sun Microsystems Inc., user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.6.0_25, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.6.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.6.0_25\jre\lib\resources.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\rt.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\jce.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.6.0_25\jre\lib\modules\jdk.boot.jar;C:\Program Files\Java\jdk1.6.0_25\jre\classes, java.vendor=Sun Microsystems Inc., file.separator=\, java.vendor.url.bug=http://java.sun.com/cgi-bin/bugreport.cgi, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, application.path=C:\Benjamin\Projects\GoDutchTrip, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=amd64}
13 Mar 2012 22:26:30,854 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:30,856 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:31,022 TRACE ~ Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,022 TRACE ~ Skipping duplicate registration of path [lastName], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,023 TRACE ~ Skipping duplicate registration of path [guest], existing type = [org.hibernate.type.BooleanType@1b7adb4a], incoming type = [org.hibernate.type.BooleanType@1b7adb4a]
13 Mar 2012 22:26:31,023 TRACE ~ Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,023 TRACE ~ Skipping duplicate registration of path [roles], existing type = [org.hibernate.type.BagType(models.security.User.roles)], incoming type = [org.hibernate.type.BagType(models.security.User.roles)]
13 Mar 2012 22:26:31,024 TRACE ~ Skipping duplicate registration of path [username], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,024 TRACE ~ Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@7aa30a4e], incoming type = [org.hibernate.type.LongType@7aa30a4e]
13 Mar 2012 22:26:31,033 DEBUG ~ Static SQL for entity: models.security.User
13 Mar 2012 22:26:31,033 DEBUG ~  Version select: select id from PERSON where id =?
13 Mar 2012 22:26:31,034 DEBUG ~  Snapshot select: select user_.id, user_1_.FIRST_NAME as FIRST2_0_, user_1_.LAST_NAME as LAST3_0_, user_.guest as guest1_, user_.PASSWORD as PASSWORD1_, user_.USER_NAME as USER3_1_ from USER user_ inner join PERSON user_1_ on user_.id=user_1_.id where user_.id=?
13 Mar 2012 22:26:31,034 DEBUG ~  Insert 0: insert into PERSON (FIRST_NAME, LAST_NAME, id) values (?, ?, ?)
13 Mar 2012 22:26:31,035 DEBUG ~  Update 0: update PERSON set FIRST_NAME=?, LAST_NAME=? where id=?
13 Mar 2012 22:26:31,035 DEBUG ~  Delete 0: delete from PERSON where id=?
13 Mar 2012 22:26:31,035 DEBUG ~  Insert 1: insert into USER (guest, PASSWORD, USER_NAME, id) values (?, ?, ?, ?)
13 Mar 2012 22:26:31,035 DEBUG ~  Update 1: update USER set guest=?, PASSWORD=?, USER_NAME=? where id=?
13 Mar 2012 22:26:31,036 DEBUG ~  Delete 1: delete from USER where id=?
13 Mar 2012 22:26:31,036 DEBUG ~  Identity insert: insert into PERSON (id, FIRST_NAME, LAST_NAME) values (null, ?, ?)
13 Mar 2012 22:26:31,049 TRACE ~ Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,051 TRACE ~ Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,053 TRACE ~ Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@7aa30a4e], incoming type = [org.hibernate.type.LongType@7aa30a4e]
13 Mar 2012 22:26:31,054 DEBUG ~ Static SQL for entity: models.security.Role
13 Mar 2012 22:26:31,055 DEBUG ~  Version select: select id from ROLE where id =?
13 Mar 2012 22:26:31,055 DEBUG ~  Snapshot select: select role_.id, role_.DESCRIPTION as DESCRIPT2_2_, role_.NAME as NAME2_ from ROLE role_ where role_.id=?
13 Mar 2012 22:26:31,056 DEBUG ~  Insert 0: insert into ROLE (DESCRIPTION, NAME, id) values (?, ?, ?)
13 Mar 2012 22:26:31,056 DEBUG ~  Update 0: update ROLE set DESCRIPTION=?, NAME=? where id=?
13 Mar 2012 22:26:31,057 DEBUG ~  Delete 0: delete from ROLE where id=?
13 Mar 2012 22:26:31,057 DEBUG ~  Identity insert: insert into ROLE (id, DESCRIPTION, NAME) values (null, ?, ?)
13 Mar 2012 22:26:31,067 TRACE ~ Skipping duplicate registration of path [firstName], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,067 TRACE ~ Skipping duplicate registration of path [lastName], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,069 TRACE ~ Skipping duplicate registration of path [guest], existing type = [org.hibernate.type.BooleanType@1b7adb4a], incoming type = [org.hibernate.type.BooleanType@1b7adb4a]
13 Mar 2012 22:26:31,070 TRACE ~ Skipping duplicate registration of path [password], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,071 TRACE ~ Skipping duplicate registration of path [roles], existing type = [org.hibernate.type.BagType(models.security.User.roles)], incoming type = [org.hibernate.type.BagType(models.security.User.roles)]
13 Mar 2012 22:26:31,071 TRACE ~ Skipping duplicate registration of path [username], existing type = [org.hibernate.type.StringType@3b05c7e1], incoming type = [org.hibernate.type.StringType@3b05c7e1]
13 Mar 2012 22:26:31,072 TRACE ~ Skipping duplicate registration of path [id], existing type = [org.hibernate.type.LongType@7aa30a4e], incoming type = [org.hibernate.type.LongType@7aa30a4e]
13 Mar 2012 22:26:31,073 DEBUG ~ Static SQL for entity: models.Person
13 Mar 2012 22:26:31,074 DEBUG ~  Version select: select id from PERSON where id =?
13 Mar 2012 22:26:31,074 DEBUG ~  Snapshot select: select person_.id, person_.FIRST_NAME as FIRST2_0_, person_.LAST_NAME as LAST3_0_ from PERSON person_ where person_.id=?
13 Mar 2012 22:26:31,079 DEBUG ~  Insert 0: insert into PERSON (FIRST_NAME, LAST_NAME, id) values (?, ?, ?)
13 Mar 2012 22:26:31,081 DEBUG ~  Update 0: update PERSON set FIRST_NAME=?, LAST_NAME=? where id=?
13 Mar 2012 22:26:31,082 DEBUG ~  Delete 0: delete from PERSON where id=?
13 Mar 2012 22:26:31,083 DEBUG ~  Identity insert: insert into PERSON (id, FIRST_NAME, LAST_NAME) values (null, ?, ?)
13 Mar 2012 22:26:31,105 DEBUG ~ Static SQL for collection: models.security.User.roles
13 Mar 2012 22:26:31,105 DEBUG ~  Row insert: insert into USER_ROLE (USER_ID, ROLE_ID) values (?, ?)
13 Mar 2012 22:26:31,106 DEBUG ~  Row update: update USER_ROLE set ROLE_ID=? where USER_ID=? and ROLE_ID=?
13 Mar 2012 22:26:31,106 DEBUG ~  Row delete: delete from USER_ROLE where USER_ID=? and ROLE_ID=?
13 Mar 2012 22:26:31,107 DEBUG ~  One-shot delete: delete from USER_ROLE where USER_ID=?
13 Mar 2012 22:26:31,168 DEBUG ~ Static select for entity models.security.User [NONE]: select user0_.id as id0_1_, user0_1_.FIRST_NAME as FIRST2_0_1_, user0_1_.LAST_NAME as LAST3_0_1_, user0_.guest as guest1_1_, user0_.PASSWORD as PASSWORD1_1_, user0_.USER_NAME as USER3_1_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id left outer join USER_ROLE roles1_ on user0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where user0_.id=?
13 Mar 2012 22:26:31,169 DEBUG ~ Static select for entity models.security.User [READ]: select user0_.id as id0_1_, user0_1_.FIRST_NAME as FIRST2_0_1_, user0_1_.LAST_NAME as LAST3_0_1_, user0_.guest as guest1_1_, user0_.PASSWORD as PASSWORD1_1_, user0_.USER_NAME as USER3_1_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id left outer join USER_ROLE roles1_ on user0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where user0_.id=?
13 Mar 2012 22:26:31,170 DEBUG ~ Static select for entity models.security.User [UPGRADE]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,171 DEBUG ~ Static select for entity models.security.User [UPGRADE_NOWAIT]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,172 DEBUG ~ Static select for entity models.security.User [FORCE]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,173 DEBUG ~ Static select for entity models.security.User [PESSIMISTIC_READ]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,173 DEBUG ~ Static select for entity models.security.User [PESSIMISTIC_WRITE]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,174 DEBUG ~ Static select for entity models.security.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=? for update
13 Mar 2012 22:26:31,175 DEBUG ~ Static select for entity models.security.User [OPTIMISTIC]: select user0_.id as id0_1_, user0_1_.FIRST_NAME as FIRST2_0_1_, user0_1_.LAST_NAME as LAST3_0_1_, user0_.guest as guest1_1_, user0_.PASSWORD as PASSWORD1_1_, user0_.USER_NAME as USER3_1_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id left outer join USER_ROLE roles1_ on user0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where user0_.id=?
13 Mar 2012 22:26:31,175 DEBUG ~ Static select for entity models.security.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id0_1_, user0_1_.FIRST_NAME as FIRST2_0_1_, user0_1_.LAST_NAME as LAST3_0_1_, user0_.guest as guest1_1_, user0_.PASSWORD as PASSWORD1_1_, user0_.USER_NAME as USER3_1_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id left outer join USER_ROLE roles1_ on user0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where user0_.id=?
13 Mar 2012 22:26:31,190 DEBUG ~ Static select for action ACTION_MERGE on entity models.security.User: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=?
13 Mar 2012 22:26:31,191 DEBUG ~ Static select for action ACTION_REFRESH on entity models.security.User: select user0_.id as id0_0_, user0_1_.FIRST_NAME as FIRST2_0_0_, user0_1_.LAST_NAME as LAST3_0_0_, user0_.guest as guest1_0_, user0_.PASSWORD as PASSWORD1_0_, user0_.USER_NAME as USER3_1_0_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.id=?
13 Mar 2012 22:26:31,194 DEBUG ~ Static select for entity models.security.Role [NONE]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,194 DEBUG ~ Static select for entity models.security.Role [READ]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,195 DEBUG ~ Static select for entity models.security.Role [UPGRADE]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,195 DEBUG ~ Static select for entity models.security.Role [UPGRADE_NOWAIT]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,196 DEBUG ~ Static select for entity models.security.Role [FORCE]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,196 DEBUG ~ Static select for entity models.security.Role [PESSIMISTIC_READ]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,197 DEBUG ~ Static select for entity models.security.Role [PESSIMISTIC_WRITE]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,198 DEBUG ~ Static select for entity models.security.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=? for update
13 Mar 2012 22:26:31,199 DEBUG ~ Static select for entity models.security.Role [OPTIMISTIC]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,200 DEBUG ~ Static select for entity models.security.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,200 DEBUG ~ Static select for action ACTION_MERGE on entity models.security.Role: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,201 DEBUG ~ Static select for action ACTION_REFRESH on entity models.security.Role: select role0_.id as id2_0_, role0_.DESCRIPTION as DESCRIPT2_2_0_, role0_.NAME as NAME2_0_ from ROLE role0_ where role0_.id=?
13 Mar 2012 22:26:31,202 DEBUG ~ Static select for entity models.Person [NONE]: select person0_.id as id0_1_, person0_.FIRST_NAME as FIRST2_0_1_, person0_.LAST_NAME as LAST3_0_1_, person0_1_.guest as guest1_1_, person0_1_.PASSWORD as PASSWORD1_1_, person0_1_.USER_NAME as USER3_1_1_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id left outer join USER_ROLE roles1_ on person0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where person0_.id=?
13 Mar 2012 22:26:31,204 DEBUG ~ Static select for entity models.Person [READ]: select person0_.id as id0_1_, person0_.FIRST_NAME as FIRST2_0_1_, person0_.LAST_NAME as LAST3_0_1_, person0_1_.guest as guest1_1_, person0_1_.PASSWORD as PASSWORD1_1_, person0_1_.USER_NAME as USER3_1_1_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id left outer join USER_ROLE roles1_ on person0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where person0_.id=?
13 Mar 2012 22:26:31,205 DEBUG ~ Static select for entity models.Person [UPGRADE]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,205 DEBUG ~ Static select for entity models.Person [UPGRADE_NOWAIT]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,206 DEBUG ~ Static select for entity models.Person [FORCE]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,207 DEBUG ~ Static select for entity models.Person [PESSIMISTIC_READ]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,207 DEBUG ~ Static select for entity models.Person [PESSIMISTIC_WRITE]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,208 DEBUG ~ Static select for entity models.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=? for update
13 Mar 2012 22:26:31,208 DEBUG ~ Static select for entity models.Person [OPTIMISTIC]: select person0_.id as id0_1_, person0_.FIRST_NAME as FIRST2_0_1_, person0_.LAST_NAME as LAST3_0_1_, person0_1_.guest as guest1_1_, person0_1_.PASSWORD as PASSWORD1_1_, person0_1_.USER_NAME as USER3_1_1_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id left outer join USER_ROLE roles1_ on person0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where person0_.id=?
13 Mar 2012 22:26:31,209 DEBUG ~ Static select for entity models.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.id as id0_1_, person0_.FIRST_NAME as FIRST2_0_1_, person0_.LAST_NAME as LAST3_0_1_, person0_1_.guest as guest1_1_, person0_1_.PASSWORD as PASSWORD1_1_, person0_1_.USER_NAME as USER3_1_1_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_1_, roles1_.USER_ID as USER1_0_3_, role2_.id as ROLE2_3_, role2_.id as id2_0_, role2_.DESCRIPTION as DESCRIPT2_2_0_, role2_.NAME as NAME2_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id left outer join USER_ROLE roles1_ on person0_.id=roles1_.USER_ID left outer join ROLE role2_ on roles1_.ROLE_ID=role2_.id where person0_.id=?
13 Mar 2012 22:26:31,210 DEBUG ~ Static select for action ACTION_MERGE on entity models.Person: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=?
13 Mar 2012 22:26:31,210 DEBUG ~ Static select for action ACTION_REFRESH on entity models.Person: select person0_.id as id0_0_, person0_.FIRST_NAME as FIRST2_0_0_, person0_.LAST_NAME as LAST3_0_0_, person0_1_.guest as guest1_0_, person0_1_.PASSWORD as PASSWORD1_0_, person0_1_.USER_NAME as USER3_1_0_, case when person0_1_.id is not null then 1 when person0_.id is not null then 0 end as clazz_0_ from PERSON person0_ left outer join USER person0_1_ on person0_.id=person0_1_.id where person0_.id=?
13 Mar 2012 22:26:31,218 DEBUG ~ Static select for collection models.security.User.roles: select roles0_.USER_ID as USER1_0_1_, roles0_.ROLE_ID as ROLE2_1_, role1_.id as id2_0_, role1_.DESCRIPTION as DESCRIPT2_2_0_, role1_.NAME as NAME2_0_ from USER_ROLE roles0_ inner join ROLE role1_ on roles0_.ROLE_ID=role1_.id where roles0_.USER_ID=?
13 Mar 2012 22:26:31,238 DEBUG ~ initializing class SessionFactoryObjectFactory
13 Mar 2012 22:26:31,240 DEBUG ~ registered: 90c135b5-55b8-4ee9-8b7a-c2dd56cc75ab (unnamed)
13 Mar 2012 22:26:31,241 INFO  ~ Not binding factory to JNDI, no JNDI name configured
13 Mar 2012 22:26:31,241 DEBUG ~ instantiated session factory
13 Mar 2012 22:26:31,262 INFO  ~ Running hbm2ddl schema update
13 Mar 2012 22:26:31,262 INFO  ~ fetching database metadata
13 Mar 2012 22:26:31,289 INFO  ~ updating schema
13 Mar 2012 22:26:31,289 TRACE ~ Starting secondPassCompile() processing
13 Mar 2012 22:26:31,290 DEBUG ~ Processing hbm.xml files
13 Mar 2012 22:26:31,291 DEBUG ~ Process annotated classes
13 Mar 2012 22:26:31,292 DEBUG ~ processing fk mappings (*ToOne and JoinedSubclass)
13 Mar 2012 22:26:31,292 DEBUG ~ processing extends queue
13 Mar 2012 22:26:31,292 DEBUG ~ processing extends queue
13 Mar 2012 22:26:31,293 DEBUG ~ processing collection mappings
13 Mar 2012 22:26:31,293 DEBUG ~ processing native query and ResultSetMapping mappings
13 Mar 2012 22:26:31,293 DEBUG ~ processing association property references
13 Mar 2012 22:26:31,293 DEBUG ~ processing foreign key constraints
13 Mar 2012 22:26:31,294 DEBUG ~ resolving reference to class: models.Person
13 Mar 2012 22:26:31,294 DEBUG ~ resolving reference to class: models.security.Role
13 Mar 2012 22:26:31,295 DEBUG ~ resolving reference to class: models.security.User
13 Mar 2012 22:26:31,300 INFO  ~ table not found: PERSON
13 Mar 2012 22:26:31,301 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:31,303 INFO  ~ table not found: ROLE
13 Mar 2012 22:26:31,304 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:31,307 INFO  ~ table not found: USER
13 Mar 2012 22:26:31,313 INFO  ~ table not found: USER_ROLE
13 Mar 2012 22:26:31,316 INFO  ~ table not found: PERSON
13 Mar 2012 22:26:31,318 INFO  ~ table not found: ROLE
13 Mar 2012 22:26:31,321 INFO  ~ table not found: USER
13 Mar 2012 22:26:31,326 INFO  ~ table not found: USER_ROLE
13 Mar 2012 22:26:31,327 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:31,328 DEBUG ~ Setting dialect [org.hibernate.dialect.H2Dialect]
13 Mar 2012 22:26:31,329 DEBUG ~ create table PERSON (id bigint generated by default as identity, FIRST_NAME varchar(80), LAST_NAME varchar(80), primary key (id))
13 Mar 2012 22:26:31,384 DEBUG ~ create table ROLE (id bigint generated by default as identity, DESCRIPTION varchar(150), NAME varchar(30) not null unique, primary key (id))
13 Mar 2012 22:26:31,387 DEBUG ~ create table USER (guest boolean, PASSWORD varchar(50) not null, USER_NAME varchar(20) not null unique, id bigint not null, primary key (id))
13 Mar 2012 22:26:31,389 DEBUG ~ create table USER_ROLE (USER_ID bigint not null, ROLE_ID bigint not null, unique (USER_ID, ROLE_ID))
13 Mar 2012 22:26:31,390 DEBUG ~ alter table USER add constraint FK27E3CBB4CD2494 foreign key (id) references PERSON
13 Mar 2012 22:26:31,493 DEBUG ~ alter table USER_ROLE add constraint FKBC16F46AAB14F784 foreign key (ROLE_ID) references ROLE
13 Mar 2012 22:26:31,496 DEBUG ~ alter table USER_ROLE add constraint FKBC16F46A503FBB64 foreign key (USER_ID) references USER
13 Mar 2012 22:26:31,499 INFO  ~ schema update complete
13 Mar 2012 22:26:31,519 DEBUG ~ Checking 0 named HQL queries
13 Mar 2012 22:26:31,521 DEBUG ~ Checking 0 named SQL queries
13 Mar 2012 22:26:31,612 TRACE ~ Wrapping up metadata context...
13 Mar 2012 22:26:31,612 TRACE ~ Starting mapped superclass [play.db.jpa.JPABase]
13 Mar 2012 22:26:31,613 TRACE ~ Completed mapped superclass [play.db.jpa.JPABase]
13 Mar 2012 22:26:31,614 TRACE ~ Starting mapped superclass [play.db.jpa.GenericModel]
13 Mar 2012 22:26:31,614 TRACE ~ Completed mapped superclass [play.db.jpa.GenericModel]
13 Mar 2012 22:26:31,615 TRACE ~ Starting mapped superclass [play.db.jpa.Model]
13 Mar 2012 22:26:31,617 TRACE ~ Building identifier attribute [play.db.jpa.Model.id]
13 Mar 2012 22:26:31,619 TRACE ~ Starting attribute metadata determination [id]
13 Mar 2012 22:26:31,620 TRACE ~     Determined member [public java.lang.Long play.db.jpa.Model.id]
13 Mar 2012 22:26:31,621 TRACE ~     determined type [name=long, class=org.hibernate.type.LongType]
13 Mar 2012 22:26:31,632 TRACE ~ Completed mapped superclass [play.db.jpa.Model]
13 Mar 2012 22:26:31,633 TRACE ~ Starting entity [models.Person]
13 Mar 2012 22:26:31,634 TRACE ~ Building attribute [models.Person.firstName]
13 Mar 2012 22:26:31,635 TRACE ~ Starting attribute metadata determination [firstName]
13 Mar 2012 22:26:31,635 TRACE ~     Determined member [public java.lang.String models.Person.firstName]
13 Mar 2012 22:26:31,636 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,636 TRACE ~ Building attribute [models.Person.lastName]
13 Mar 2012 22:26:31,637 TRACE ~ Starting attribute metadata determination [lastName]
13 Mar 2012 22:26:31,646 TRACE ~     Determined member [public java.lang.String models.Person.lastName]
13 Mar 2012 22:26:31,651 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,655 TRACE ~ Completed entity [models.Person]
13 Mar 2012 22:26:31,655 TRACE ~ Starting entity [models.security.User]
13 Mar 2012 22:26:31,656 TRACE ~ Building attribute [models.security.User.guest]
13 Mar 2012 22:26:31,656 TRACE ~ Starting attribute metadata determination [guest]
13 Mar 2012 22:26:31,666 TRACE ~     Determined member [private java.lang.Boolean models.security.User.guest]
13 Mar 2012 22:26:31,667 TRACE ~     determined type [name=boolean, class=org.hibernate.type.BooleanType]
13 Mar 2012 22:26:31,668 TRACE ~ Building attribute [models.security.User.password]
13 Mar 2012 22:26:31,668 TRACE ~ Starting attribute metadata determination [password]
13 Mar 2012 22:26:31,669 TRACE ~     Determined member [public java.lang.String models.security.User.password]
13 Mar 2012 22:26:31,669 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,670 TRACE ~ Building attribute [models.security.User.roles]
13 Mar 2012 22:26:31,671 TRACE ~ Starting attribute metadata determination [roles]
13 Mar 2012 22:26:31,672 TRACE ~     Determined member [public java.util.List models.security.User.roles]
13 Mar 2012 22:26:31,673 TRACE ~     determined type [name=java.util.Collection(models.security.User.roles), class=org.hibernate.type.BagType]
13 Mar 2012 22:26:31,686 TRACE ~ Building attribute [models.security.User.username]
13 Mar 2012 22:26:31,687 TRACE ~ Starting attribute metadata determination [username]
13 Mar 2012 22:26:31,688 TRACE ~     Determined member [public java.lang.String models.security.User.username]
13 Mar 2012 22:26:31,688 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,691 TRACE ~ Completed entity [models.security.User]
13 Mar 2012 22:26:31,692 TRACE ~ Starting entity [models.security.Role]
13 Mar 2012 22:26:31,693 TRACE ~ Building attribute [models.security.Role.description]
13 Mar 2012 22:26:31,693 TRACE ~ Starting attribute metadata determination [description]
13 Mar 2012 22:26:31,694 TRACE ~     Determined member [public java.lang.String models.security.Role.description]
13 Mar 2012 22:26:31,695 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,696 TRACE ~ Building attribute [models.security.Role.name]
13 Mar 2012 22:26:31,696 TRACE ~ Starting attribute metadata determination [name]
13 Mar 2012 22:26:31,697 TRACE ~     Determined member [public java.lang.String models.security.Role.name]
13 Mar 2012 22:26:31,697 TRACE ~     determined type [name=string, class=org.hibernate.type.StringType]
13 Mar 2012 22:26:31,699 TRACE ~ Completed entity [models.security.Role]
13 Mar 2012 22:26:31,870 INFO  ~ Application 'GoDutchTrip' is now started !
13 Mar 2012 22:26:32,218 DEBUG ~ opened session at timestamp: 13316955920
13 Mar 2012 22:26:32,222 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:26:32,235 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:26:32,235 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:26:32,236 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:26:32,239 DEBUG ~ begin
13 Mar 2012 22:26:32,239 DEBUG ~ opening JDBC connection
13 Mar 2012 22:26:32,240 DEBUG ~ current autocommit status: true
13 Mar 2012 22:26:32,240 DEBUG ~ disabling autocommit
13 Mar 2012 22:26:32,241 TRACE ~ after transaction begin
13 Mar 2012 22:26:32,392 DEBUG ~ commit
13 Mar 2012 22:26:32,400 TRACE ~ automatically flushing session
13 Mar 2012 22:26:32,401 TRACE ~ before transaction completion
13 Mar 2012 22:26:32,407 TRACE ~ before transaction completion
13 Mar 2012 22:26:32,408 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:26:32,408 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:26:32,409 TRACE ~ after transaction completion
13 Mar 2012 22:26:32,409 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:26:32,410 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:26:32,410 TRACE ~ after transaction completion
13 Mar 2012 22:26:32,413 TRACE ~ closing session
13 Mar 2012 22:26:32,413 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:26:32,579 DEBUG ~ opened session at timestamp: 13316955925
13 Mar 2012 22:26:32,580 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:26:32,580 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:26:32,581 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:26:32,581 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:26:32,582 DEBUG ~ begin
13 Mar 2012 22:26:32,582 DEBUG ~ opening JDBC connection
13 Mar 2012 22:26:32,583 DEBUG ~ current autocommit status: true
13 Mar 2012 22:26:32,583 DEBUG ~ disabling autocommit
13 Mar 2012 22:26:32,583 TRACE ~ after transaction begin
13 Mar 2012 22:26:33,629 DEBUG ~ commit
13 Mar 2012 22:26:33,630 TRACE ~ automatically flushing session
13 Mar 2012 22:26:33,630 TRACE ~ before transaction completion
13 Mar 2012 22:26:33,633 TRACE ~ before transaction completion
13 Mar 2012 22:26:33,634 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:26:33,636 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:26:33,637 TRACE ~ after transaction completion
13 Mar 2012 22:26:33,638 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:26:33,638 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:26:33,638 TRACE ~ after transaction completion
13 Mar 2012 22:26:33,641 TRACE ~ closing session
13 Mar 2012 22:26:33,642 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:14,641 DEBUG ~ opened session at timestamp: 13316968346
13 Mar 2012 22:47:14,643 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:14,643 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:14,644 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:14,645 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:14,645 DEBUG ~ begin
13 Mar 2012 22:47:14,646 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:14,646 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:14,647 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:14,647 TRACE ~ after transaction begin
13 Mar 2012 22:47:14,656 DEBUG ~ commit
13 Mar 2012 22:47:14,657 TRACE ~ automatically flushing session
13 Mar 2012 22:47:14,657 TRACE ~ before transaction completion
13 Mar 2012 22:47:14,658 TRACE ~ before transaction completion
13 Mar 2012 22:47:14,658 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:14,659 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:14,659 TRACE ~ after transaction completion
13 Mar 2012 22:47:14,660 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:14,660 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:14,661 TRACE ~ after transaction completion
13 Mar 2012 22:47:14,662 TRACE ~ closing session
13 Mar 2012 22:47:14,662 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:16,521 DEBUG ~ opened session at timestamp: 13316968365
13 Mar 2012 22:47:16,522 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:16,523 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:16,523 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:16,524 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:16,525 DEBUG ~ begin
13 Mar 2012 22:47:16,527 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:16,528 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:16,528 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:16,529 TRACE ~ after transaction begin
13 Mar 2012 22:47:16,540 DEBUG ~ commit
13 Mar 2012 22:47:16,541 TRACE ~ automatically flushing session
13 Mar 2012 22:47:16,542 TRACE ~ before transaction completion
13 Mar 2012 22:47:16,542 TRACE ~ before transaction completion
13 Mar 2012 22:47:16,542 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:16,543 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:16,543 TRACE ~ after transaction completion
13 Mar 2012 22:47:16,544 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:16,544 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:16,545 TRACE ~ after transaction completion
13 Mar 2012 22:47:16,546 TRACE ~ closing session
13 Mar 2012 22:47:16,547 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:28,704 DEBUG ~ opened session at timestamp: 13316968487
13 Mar 2012 22:47:28,705 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:28,705 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:28,706 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:28,706 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:28,706 DEBUG ~ begin
13 Mar 2012 22:47:28,707 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:28,707 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:28,708 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:28,708 TRACE ~ after transaction begin
13 Mar 2012 22:47:28,879 TRACE ~ unable to locate HQL query plan in cache; generating (from models.security.User where username = ?)
13 Mar 2012 22:47:29,105 DEBUG ~ parse() - HQL: from models.security.User where username = ?
13 Mar 2012 22:47:29,107 TRACE ~ -> statement
13 Mar 2012 22:47:29,111 TRACE ~ ---> selectStatement
13 Mar 2012 22:47:29,113 TRACE ~ -----> queryRule
13 Mar 2012 22:47:29,114 TRACE ~ -------> selectFrom
13 Mar 2012 22:47:29,114 TRACE ~ ---------> fromClause
13 Mar 2012 22:47:29,120 TRACE ~ -----------> fromRange
13 Mar 2012 22:47:29,121 TRACE ~ -------------> fromClassOrOuterQueryPath
13 Mar 2012 22:47:29,122 TRACE ~ ---------------> path
13 Mar 2012 22:47:29,122 TRACE ~ -----------------> identifier
13 Mar 2012 22:47:29,123 TRACE ~ <----------------- identifier
13 Mar 2012 22:47:29,124 TRACE ~ -----------------> identifier
13 Mar 2012 22:47:29,125 TRACE ~ <----------------- identifier
13 Mar 2012 22:47:29,125 TRACE ~ -----------------> identifier
13 Mar 2012 22:47:29,126 TRACE ~ <----------------- identifier
13 Mar 2012 22:47:29,127 TRACE ~ <--------------- path
13 Mar 2012 22:47:29,128 TRACE ~ <------------- fromClassOrOuterQueryPath
13 Mar 2012 22:47:29,129 TRACE ~ <----------- fromRange
13 Mar 2012 22:47:29,130 TRACE ~ <--------- fromClause
13 Mar 2012 22:47:29,130 TRACE ~ <------- selectFrom
13 Mar 2012 22:47:29,131 TRACE ~ -------> whereClause
13 Mar 2012 22:47:29,132 TRACE ~ ---------> logicalExpression
13 Mar 2012 22:47:29,133 TRACE ~ -----------> expression
13 Mar 2012 22:47:29,133 TRACE ~ -------------> logicalOrExpression
13 Mar 2012 22:47:29,134 TRACE ~ ---------------> logicalAndExpression
13 Mar 2012 22:47:29,135 TRACE ~ -----------------> negatedExpression
13 Mar 2012 22:47:29,174 TRACE ~ -------------------> equalityExpression
13 Mar 2012 22:47:29,176 TRACE ~ ---------------------> relationalExpression
13 Mar 2012 22:47:29,177 TRACE ~ -----------------------> concatenation
13 Mar 2012 22:47:29,178 TRACE ~ -------------------------> additiveExpression
13 Mar 2012 22:47:29,179 TRACE ~ ---------------------------> multiplyExpression
13 Mar 2012 22:47:29,180 TRACE ~ -----------------------------> unaryExpression
13 Mar 2012 22:47:29,181 TRACE ~ -------------------------------> atom
13 Mar 2012 22:47:29,182 TRACE ~ ---------------------------------> primaryExpression
13 Mar 2012 22:47:29,183 TRACE ~ -----------------------------------> identPrimary
13 Mar 2012 22:47:29,184 TRACE ~ -------------------------------------> identifier
13 Mar 2012 22:47:29,185 TRACE ~ <------------------------------------- identifier
13 Mar 2012 22:47:29,188 TRACE ~ <----------------------------------- identPrimary
13 Mar 2012 22:47:29,189 TRACE ~ <--------------------------------- primaryExpression
13 Mar 2012 22:47:29,190 TRACE ~ <------------------------------- atom
13 Mar 2012 22:47:29,191 TRACE ~ <----------------------------- unaryExpression
13 Mar 2012 22:47:29,192 TRACE ~ <--------------------------- multiplyExpression
13 Mar 2012 22:47:29,192 TRACE ~ <------------------------- additiveExpression
13 Mar 2012 22:47:29,193 TRACE ~ <----------------------- concatenation
13 Mar 2012 22:47:29,194 TRACE ~ <--------------------- relationalExpression
13 Mar 2012 22:47:29,194 TRACE ~ ---------------------> relationalExpression
13 Mar 2012 22:47:29,195 TRACE ~ -----------------------> concatenation
13 Mar 2012 22:47:29,196 TRACE ~ -------------------------> additiveExpression
13 Mar 2012 22:47:29,196 TRACE ~ ---------------------------> multiplyExpression
13 Mar 2012 22:47:29,197 TRACE ~ -----------------------------> unaryExpression
13 Mar 2012 22:47:29,198 TRACE ~ -------------------------------> atom
13 Mar 2012 22:47:29,198 TRACE ~ ---------------------------------> primaryExpression
13 Mar 2012 22:47:29,199 TRACE ~ -----------------------------------> parameter
13 Mar 2012 22:47:29,200 TRACE ~ <----------------------------------- parameter
13 Mar 2012 22:47:29,201 TRACE ~ <--------------------------------- primaryExpression
13 Mar 2012 22:47:29,201 TRACE ~ <------------------------------- atom
13 Mar 2012 22:47:29,202 TRACE ~ <----------------------------- unaryExpression
13 Mar 2012 22:47:29,207 TRACE ~ <--------------------------- multiplyExpression
13 Mar 2012 22:47:29,208 TRACE ~ <------------------------- additiveExpression
13 Mar 2012 22:47:29,212 TRACE ~ <----------------------- concatenation
13 Mar 2012 22:47:29,213 TRACE ~ <--------------------- relationalExpression
13 Mar 2012 22:47:29,214 TRACE ~ <------------------- equalityExpression
13 Mar 2012 22:47:29,214 TRACE ~ <----------------- negatedExpression
13 Mar 2012 22:47:29,215 TRACE ~ <--------------- logicalAndExpression
13 Mar 2012 22:47:29,216 TRACE ~ <------------- logicalOrExpression
13 Mar 2012 22:47:29,216 TRACE ~ <----------- expression
13 Mar 2012 22:47:29,217 TRACE ~ <--------- logicalExpression
13 Mar 2012 22:47:29,218 TRACE ~ <------- whereClause
13 Mar 2012 22:47:29,218 TRACE ~ <----- queryRule
13 Mar 2012 22:47:29,220 TRACE ~ <--- selectStatement
13 Mar 2012 22:47:29,221 TRACE ~ <- statement
13 Mar 2012 22:47:29,247 DEBUG ~ --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'models'
    |           |  \-[IDENT] Node: 'security'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[PARAM] Node: '?'

13 Mar 2012 22:47:29,248 DEBUG ~ throwQueryException() : no errors
13 Mar 2012 22:47:29,295 TRACE ~ -> statement (query [QUERY])
13 Mar 2012 22:47:29,296 TRACE ~ ---> selectStatement (query [QUERY])
13 Mar 2012 22:47:29,297 TRACE ~ -----> query (query [QUERY])
13 Mar 2012 22:47:29,301 DEBUG ~ select << begin [level=1, statement=select]
13 Mar 2012 22:47:29,302 TRACE ~ -------> fromClause (from [FROM])
13 Mar 2012 22:47:29,310 TRACE ~ ---------> fromElementList (RANGE [RANGE])
13 Mar 2012 22:47:29,311 TRACE ~ -----------> fromElement (RANGE [RANGE])
13 Mar 2012 22:47:29,312 TRACE ~ -------------> path (. [DOT])
13 Mar 2012 22:47:29,317 TRACE ~ ---------------> path (. [DOT])
13 Mar 2012 22:47:29,318 TRACE ~ -----------------> path (models [IDENT])
13 Mar 2012 22:47:29,318 TRACE ~ -------------------> identifier (models [IDENT])
13 Mar 2012 22:47:29,319 TRACE ~ <------------------- identifier
13 Mar 2012 22:47:29,320 TRACE ~ <----------------- path
13 Mar 2012 22:47:29,321 TRACE ~ -----------------> identifier (security [IDENT])
13 Mar 2012 22:47:29,321 TRACE ~ <----------------- identifier
13 Mar 2012 22:47:29,322 TRACE ~ <--------------- path
13 Mar 2012 22:47:29,322 TRACE ~ ---------------> identifier (User [IDENT])
13 Mar 2012 22:47:29,323 TRACE ~ <--------------- identifier
13 Mar 2012 22:47:29,323 TRACE ~ <------------- path
13 Mar 2012 22:47:29,338 DEBUG ~ FromClause{level=1} :  models.security.User (no alias) -> user0_
13 Mar 2012 22:47:29,339 TRACE ~ <----------- fromElement
13 Mar 2012 22:47:29,339 TRACE ~ <--------- fromElementList
13 Mar 2012 22:47:29,340 TRACE ~ <------- fromClause
13 Mar 2012 22:47:29,340 TRACE ~ -------> whereClause (where [WHERE])
13 Mar 2012 22:47:29,341 TRACE ~ ---------> logicalExpr (= [EQ])
13 Mar 2012 22:47:29,341 TRACE ~ -----------> comparisonExpr (= [EQ])
13 Mar 2012 22:47:29,345 TRACE ~ -------------> exprOrSubquery (username [IDENT])
13 Mar 2012 22:47:29,346 TRACE ~ ---------------> expr (username [IDENT])
13 Mar 2012 22:47:29,346 TRACE ~ -----------------> addrExpr (username [IDENT])
13 Mar 2012 22:47:29,347 TRACE ~ -------------------> identifier (username [IDENT])
13 Mar 2012 22:47:29,347 TRACE ~ <------------------- identifier
13 Mar 2012 22:47:29,349 TRACE ~ attempting to resolve property [username] as a non-qualified ref
13 Mar 2012 22:47:29,350 DEBUG ~ Resolved :  {synthetic-alias} -> {synthetic-alias}
13 Mar 2012 22:47:29,353 TRACE ~ handling property dereference [models.security.User (null) -> username (class)]
13 Mar 2012 22:47:29,354 TRACE ~ <----------------- addrExpr
13 Mar 2012 22:47:29,354 DEBUG ~ getDataType() : username -> org.hibernate.type.StringType@3b05c7e1
13 Mar 2012 22:47:29,356 DEBUG ~ Resolved :  {synthetic-alias}.username -> user0_.USER_NAME
13 Mar 2012 22:47:29,357 TRACE ~ <--------------- expr
13 Mar 2012 22:47:29,358 TRACE ~ <------------- exprOrSubquery
13 Mar 2012 22:47:29,358 TRACE ~ -------------> exprOrSubquery (? [PARAM])
13 Mar 2012 22:47:29,359 TRACE ~ ---------------> expr (? [PARAM])
13 Mar 2012 22:47:29,359 TRACE ~ -----------------> parameter (? [PARAM])
13 Mar 2012 22:47:29,377 TRACE ~ <----------------- parameter
13 Mar 2012 22:47:29,377 TRACE ~ <--------------- expr
13 Mar 2012 22:47:29,378 TRACE ~ <------------- exprOrSubquery
13 Mar 2012 22:47:29,378 TRACE ~ <----------- comparisonExpr
13 Mar 2012 22:47:29,379 TRACE ~ <--------- logicalExpr
13 Mar 2012 22:47:29,379 TRACE ~ <------- whereClause
13 Mar 2012 22:47:29,380 DEBUG ~ select : finishing up [level=1, statement=select]
13 Mar 2012 22:47:29,381 DEBUG ~ processQuery() :  ( SELECT ( FromClause{level=1} USER user0_ ) ( where ( = ( user0_.USER_NAME {synthetic-alias} username ) ? ) ) )
13 Mar 2012 22:47:29,389 DEBUG ~ Derived SELECT clause created.
13 Mar 2012 22:47:29,398 DEBUG ~ Using FROM fragment [USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id]
13 Mar 2012 22:47:29,399 DEBUG ~ select >> end [level=1, statement=select]
13 Mar 2012 22:47:29,400 TRACE ~ <----- query
13 Mar 2012 22:47:29,400 TRACE ~ <--- selectStatement
13 Mar 2012 22:47:29,400 TRACE ~ <- statement
13 Mar 2012 22:47:29,402 DEBUG ~ --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (PERSON,USER)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USER,tableAlias=user0_,origin=null,columns={,className=models.security.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_1_.FIRST_NAME as FIRST2_0_, user0_1_.LAST_NAME as LAST3_0_, user0_.guest as guest1_, user0_.PASSWORD as PASSWORD1_, user0_.USER_NAME as USER3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=USER,tableAlias=user0_,origin=null,columns={,className=models.security.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.USER_NAME' {propertyName=username,dereferenceType=ALL,propertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=models.security.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@3b05c7e1}

13 Mar 2012 22:47:29,405 DEBUG ~ throwQueryException() : no errors
13 Mar 2012 22:47:29,424 TRACE ~ -> statement (SELECT [SELECT])
13 Mar 2012 22:47:29,424 TRACE ~ ---> selectStatement (SELECT [SELECT])
13 Mar 2012 22:47:29,425 TRACE ~ -----> selectClause ({derived select clause} [SELECT_CLAUSE])
13 Mar 2012 22:47:29,426 TRACE ~ -------> selectColumn (user0_.id as id0_ [SELECT_EXPR])
13 Mar 2012 22:47:29,426 TRACE ~ ---------> selectExpr (user0_.id as id0_ [SELECT_EXPR])
13 Mar 2012 22:47:29,427 TRACE ~ -----------> selectAtom (user0_.id as id0_ [SELECT_EXPR])
13 Mar 2012 22:47:29,427 TRACE ~ <----------- selectAtom
13 Mar 2012 22:47:29,428 TRACE ~ <--------- selectExpr
13 Mar 2012 22:47:29,428 TRACE ~ <------- selectColumn
13 Mar 2012 22:47:29,429 TRACE ~ -------> selectColumn (user0_1_.FIRST_NAME as FIRST2_0_, user0_1_.LAST_NAME as LAST3_0_, user0_.guest as guest1_, user0_.PASSWORD as PASSWORD1_, user0_.USER_NAME as USER3_1_ [SQL_TOKEN])
13 Mar 2012 22:47:29,429 TRACE ~ ---------> selectExpr (user0_1_.FIRST_NAME as FIRST2_0_, user0_1_.LAST_NAME as LAST3_0_, user0_.guest as guest1_, user0_.PASSWORD as PASSWORD1_, user0_.USER_NAME as USER3_1_ [SQL_TOKEN])
13 Mar 2012 22:47:29,430 TRACE ~ -----------> selectAtom (user0_1_.FIRST_NAME as FIRST2_0_, user0_1_.LAST_NAME as LAST3_0_, user0_.guest as guest1_, user0_.PASSWORD as PASSWORD1_, user0_.USER_NAME as USER3_1_ [SQL_TOKEN])
13 Mar 2012 22:47:29,431 TRACE ~ <----------- selectAtom
13 Mar 2012 22:47:29,431 TRACE ~ <--------- selectExpr
13 Mar 2012 22:47:29,432 TRACE ~ <------- selectColumn
13 Mar 2012 22:47:29,432 TRACE ~ <----- selectClause
13 Mar 2012 22:47:29,432 TRACE ~ -----> from (from [FROM])
13 Mar 2012 22:47:29,433 TRACE ~ -------> fromTable (USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id [FROM_FRAGMENT])
13 Mar 2012 22:47:29,434 TRACE ~ <------- fromTable
13 Mar 2012 22:47:29,434 TRACE ~ <----- from
13 Mar 2012 22:47:29,434 TRACE ~ -----> whereExpr (= [EQ])
13 Mar 2012 22:47:29,435 TRACE ~ -------> booleanExpr (= [EQ])
13 Mar 2012 22:47:29,435 TRACE ~ ---------> comparisonExpr (= [EQ])
13 Mar 2012 22:47:29,436 TRACE ~ -----------> binaryComparisonExpression (= [EQ])
13 Mar 2012 22:47:29,436 TRACE ~ -------------> expr (user0_.USER_NAME [DOT])
13 Mar 2012 22:47:29,436 TRACE ~ ---------------> simpleExpr (user0_.USER_NAME [DOT])
13 Mar 2012 22:47:29,437 TRACE ~ -----------------> addrExpr (user0_.USER_NAME [DOT])
13 Mar 2012 22:47:29,437 TRACE ~ <----------------- addrExpr
13 Mar 2012 22:47:29,438 TRACE ~ <--------------- simpleExpr
13 Mar 2012 22:47:29,438 TRACE ~ <------------- expr
13 Mar 2012 22:47:29,439 TRACE ~ -------------> expr (? [PARAM])
13 Mar 2012 22:47:29,439 TRACE ~ ---------------> simpleExpr (? [PARAM])
13 Mar 2012 22:47:29,439 TRACE ~ -----------------> parameter (? [PARAM])
13 Mar 2012 22:47:29,440 TRACE ~ <----------------- parameter
13 Mar 2012 22:47:29,440 TRACE ~ <--------------- simpleExpr
13 Mar 2012 22:47:29,441 TRACE ~ <------------- expr
13 Mar 2012 22:47:29,441 TRACE ~ <----------- binaryComparisonExpression
13 Mar 2012 22:47:29,442 TRACE ~ <--------- comparisonExpr
13 Mar 2012 22:47:29,442 TRACE ~ <------- booleanExpr
13 Mar 2012 22:47:29,442 TRACE ~ <----- whereExpr
13 Mar 2012 22:47:29,443 TRACE ~ <--- selectStatement
13 Mar 2012 22:47:29,443 TRACE ~ <- statement
13 Mar 2012 22:47:29,444 DEBUG ~ HQL: from models.security.User where username = ?
13 Mar 2012 22:47:29,444 DEBUG ~ SQL: select user0_.id as id0_, user0_1_.FIRST_NAME as FIRST2_0_, user0_1_.LAST_NAME as LAST3_0_, user0_.guest as guest1_, user0_.PASSWORD as PASSWORD1_, user0_.USER_NAME as USER3_1_ from USER user0_ inner join PERSON user0_1_ on user0_.id=user0_1_.id where user0_.USER_NAME=?
13 Mar 2012 22:47:29,445 DEBUG ~ throwQueryException() : no errors
13 Mar 2012 22:47:29,455 TRACE ~ HQL param location recognition took 3 mills (from models.security.User where username = ?)
13 Mar 2012 22:47:29,464 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:47:29,466 TRACE ~ find: from models.security.User where username = ?
13 Mar 2012 22:47:29,467 TRACE ~ parameters: [admin]
13 Mar 2012 22:47:29,468 TRACE ~ named parameters: {}
13 Mar 2012 22:47:29,472 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
13 Mar 2012 22:47:29,474 TRACE ~ preparing statement
13 Mar 2012 22:47:29,485 TRACE ~ binding parameter [1] as [VARCHAR] - admin
13 Mar 2012 22:47:29,486 TRACE ~ Bound [3] parameters total
13 Mar 2012 22:47:29,487 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
13 Mar 2012 22:47:29,495 TRACE ~ processing result set
13 Mar 2012 22:47:29,496 TRACE ~ done processing result set (0 rows)
13 Mar 2012 22:47:29,496 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
13 Mar 2012 22:47:29,500 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
13 Mar 2012 22:47:29,501 TRACE ~ closing statement
13 Mar 2012 22:47:29,503 TRACE ~ total objects hydrated: 0
13 Mar 2012 22:47:29,504 DEBUG ~ initializing non-lazy collections
13 Mar 2012 22:47:29,507 INFO  ~ admin is trying to login.
13 Mar 2012 22:47:29,512 DEBUG ~ commit
13 Mar 2012 22:47:29,513 TRACE ~ automatically flushing session
13 Mar 2012 22:47:29,513 TRACE ~ before transaction completion
13 Mar 2012 22:47:29,513 TRACE ~ before transaction completion
13 Mar 2012 22:47:29,514 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:29,514 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:29,515 TRACE ~ after transaction completion
13 Mar 2012 22:47:29,515 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:29,515 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:29,516 TRACE ~ after transaction completion
13 Mar 2012 22:47:29,517 TRACE ~ closing session
13 Mar 2012 22:47:29,517 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:29,541 DEBUG ~ opened session at timestamp: 13316968495
13 Mar 2012 22:47:29,562 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:29,563 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:29,563 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:29,564 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:29,564 DEBUG ~ begin
13 Mar 2012 22:47:29,565 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:29,565 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:29,566 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:29,566 TRACE ~ after transaction begin
13 Mar 2012 22:47:29,578 DEBUG ~ commit
13 Mar 2012 22:47:29,579 TRACE ~ automatically flushing session
13 Mar 2012 22:47:29,579 TRACE ~ before transaction completion
13 Mar 2012 22:47:29,580 TRACE ~ before transaction completion
13 Mar 2012 22:47:29,580 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:29,581 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:29,581 TRACE ~ after transaction completion
13 Mar 2012 22:47:29,581 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:29,582 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:29,582 TRACE ~ after transaction completion
13 Mar 2012 22:47:29,583 TRACE ~ closing session
13 Mar 2012 22:47:29,583 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:33,068 DEBUG ~ opened session at timestamp: 13316968530
13 Mar 2012 22:47:33,069 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:33,070 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:33,071 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:33,072 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:33,073 DEBUG ~ begin
13 Mar 2012 22:47:33,073 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:33,074 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:33,075 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:33,075 TRACE ~ after transaction begin
13 Mar 2012 22:47:33,083 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:47:33,085 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:47:33,085 TRACE ~ find: from models.security.User where username = ?
13 Mar 2012 22:47:33,086 TRACE ~ parameters: []
13 Mar 2012 22:47:33,086 TRACE ~ named parameters: {}
13 Mar 2012 22:47:33,087 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
13 Mar 2012 22:47:33,087 TRACE ~ preparing statement
13 Mar 2012 22:47:33,088 TRACE ~ binding parameter [1] as [VARCHAR] - 
13 Mar 2012 22:47:33,088 TRACE ~ Bound [3] parameters total
13 Mar 2012 22:47:33,089 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
13 Mar 2012 22:47:33,090 TRACE ~ processing result set
13 Mar 2012 22:47:33,090 TRACE ~ done processing result set (0 rows)
13 Mar 2012 22:47:33,090 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
13 Mar 2012 22:47:33,092 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
13 Mar 2012 22:47:33,093 TRACE ~ closing statement
13 Mar 2012 22:47:33,093 TRACE ~ total objects hydrated: 0
13 Mar 2012 22:47:33,093 DEBUG ~ initializing non-lazy collections
13 Mar 2012 22:47:33,094 INFO  ~  is trying to login.
13 Mar 2012 22:47:33,096 DEBUG ~ commit
13 Mar 2012 22:47:33,096 TRACE ~ automatically flushing session
13 Mar 2012 22:47:33,097 TRACE ~ before transaction completion
13 Mar 2012 22:47:33,097 TRACE ~ before transaction completion
13 Mar 2012 22:47:33,098 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:33,098 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:33,098 TRACE ~ after transaction completion
13 Mar 2012 22:47:33,099 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:33,099 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:33,099 TRACE ~ after transaction completion
13 Mar 2012 22:47:33,100 TRACE ~ closing session
13 Mar 2012 22:47:33,100 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:47:33,121 DEBUG ~ opened session at timestamp: 13316968531
13 Mar 2012 22:47:33,122 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:47:33,123 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:47:33,123 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:47:33,123 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:47:33,124 DEBUG ~ begin
13 Mar 2012 22:47:33,124 DEBUG ~ opening JDBC connection
13 Mar 2012 22:47:33,127 DEBUG ~ current autocommit status: true
13 Mar 2012 22:47:33,128 DEBUG ~ disabling autocommit
13 Mar 2012 22:47:33,128 TRACE ~ after transaction begin
13 Mar 2012 22:47:33,136 DEBUG ~ commit
13 Mar 2012 22:47:33,137 TRACE ~ automatically flushing session
13 Mar 2012 22:47:33,137 TRACE ~ before transaction completion
13 Mar 2012 22:47:33,137 TRACE ~ before transaction completion
13 Mar 2012 22:47:33,138 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:47:33,138 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:47:33,139 TRACE ~ after transaction completion
13 Mar 2012 22:47:33,139 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:47:33,139 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:47:33,140 TRACE ~ after transaction completion
13 Mar 2012 22:47:33,140 TRACE ~ closing session
13 Mar 2012 22:47:33,141 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:48:45,138 DEBUG ~ opened session at timestamp: 13316969251
13 Mar 2012 22:48:45,139 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:48:45,140 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:48:45,140 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:48:45,141 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:48:45,141 DEBUG ~ begin
13 Mar 2012 22:48:45,142 DEBUG ~ opening JDBC connection
13 Mar 2012 22:48:45,142 DEBUG ~ current autocommit status: true
13 Mar 2012 22:48:45,143 DEBUG ~ disabling autocommit
13 Mar 2012 22:48:45,143 TRACE ~ after transaction begin
13 Mar 2012 22:48:45,147 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:48:45,148 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:48:45,149 TRACE ~ find: from models.security.User where username = ?
13 Mar 2012 22:48:45,149 TRACE ~ parameters: [admin]
13 Mar 2012 22:48:45,149 TRACE ~ named parameters: {}
13 Mar 2012 22:48:45,150 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
13 Mar 2012 22:48:45,151 TRACE ~ preparing statement
13 Mar 2012 22:48:45,151 TRACE ~ binding parameter [1] as [VARCHAR] - admin
13 Mar 2012 22:48:45,152 TRACE ~ Bound [3] parameters total
13 Mar 2012 22:48:45,152 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
13 Mar 2012 22:48:45,153 TRACE ~ processing result set
13 Mar 2012 22:48:45,153 TRACE ~ done processing result set (0 rows)
13 Mar 2012 22:48:45,154 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
13 Mar 2012 22:48:45,155 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
13 Mar 2012 22:48:45,156 TRACE ~ closing statement
13 Mar 2012 22:48:45,157 TRACE ~ total objects hydrated: 0
13 Mar 2012 22:48:45,157 DEBUG ~ initializing non-lazy collections
13 Mar 2012 22:48:45,158 INFO  ~ admin is trying to login.
13 Mar 2012 22:48:45,160 DEBUG ~ commit
13 Mar 2012 22:48:45,160 TRACE ~ automatically flushing session
13 Mar 2012 22:48:45,161 TRACE ~ before transaction completion
13 Mar 2012 22:48:45,161 TRACE ~ before transaction completion
13 Mar 2012 22:48:45,162 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:48:45,162 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:48:45,162 TRACE ~ after transaction completion
13 Mar 2012 22:48:45,163 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:48:45,163 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:48:45,164 TRACE ~ after transaction completion
13 Mar 2012 22:48:45,165 TRACE ~ closing session
13 Mar 2012 22:48:45,165 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:48:45,188 DEBUG ~ opened session at timestamp: 13316969251
13 Mar 2012 22:48:45,189 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:48:45,189 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:48:45,190 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:48:45,190 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:48:45,191 DEBUG ~ begin
13 Mar 2012 22:48:45,191 DEBUG ~ opening JDBC connection
13 Mar 2012 22:48:45,192 DEBUG ~ current autocommit status: true
13 Mar 2012 22:48:45,192 DEBUG ~ disabling autocommit
13 Mar 2012 22:48:45,192 TRACE ~ after transaction begin
13 Mar 2012 22:48:45,199 DEBUG ~ commit
13 Mar 2012 22:48:45,200 TRACE ~ automatically flushing session
13 Mar 2012 22:48:45,200 TRACE ~ before transaction completion
13 Mar 2012 22:48:45,201 TRACE ~ before transaction completion
13 Mar 2012 22:48:45,201 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:48:45,206 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:48:45,206 TRACE ~ after transaction completion
13 Mar 2012 22:48:45,207 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:48:45,207 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:48:45,208 TRACE ~ after transaction completion
13 Mar 2012 22:48:45,210 TRACE ~ closing session
13 Mar 2012 22:48:45,210 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:49:11,865 DEBUG ~ opened session at timestamp: 13316969518
13 Mar 2012 22:49:11,866 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:49:11,867 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:49:11,867 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:49:11,868 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:49:11,868 DEBUG ~ begin
13 Mar 2012 22:49:11,869 DEBUG ~ opening JDBC connection
13 Mar 2012 22:49:11,869 DEBUG ~ current autocommit status: true
13 Mar 2012 22:49:11,870 DEBUG ~ disabling autocommit
13 Mar 2012 22:49:11,870 TRACE ~ after transaction begin
13 Mar 2012 22:49:11,874 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:49:11,875 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:49:11,876 TRACE ~ find: from models.security.User where username = ?
13 Mar 2012 22:49:11,877 TRACE ~ parameters: [admin]
13 Mar 2012 22:49:11,878 TRACE ~ named parameters: {}
13 Mar 2012 22:49:11,878 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
13 Mar 2012 22:49:11,879 TRACE ~ preparing statement
13 Mar 2012 22:49:11,880 TRACE ~ binding parameter [1] as [VARCHAR] - admin
13 Mar 2012 22:49:11,881 TRACE ~ Bound [3] parameters total
13 Mar 2012 22:49:11,881 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
13 Mar 2012 22:49:11,882 TRACE ~ processing result set
13 Mar 2012 22:49:11,882 TRACE ~ done processing result set (0 rows)
13 Mar 2012 22:49:11,883 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
13 Mar 2012 22:49:11,884 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
13 Mar 2012 22:49:11,885 TRACE ~ closing statement
13 Mar 2012 22:49:11,886 TRACE ~ total objects hydrated: 0
13 Mar 2012 22:49:11,886 DEBUG ~ initializing non-lazy collections
13 Mar 2012 22:49:11,887 INFO  ~ admin is trying to login.
13 Mar 2012 22:49:11,889 DEBUG ~ commit
13 Mar 2012 22:49:11,890 TRACE ~ automatically flushing session
13 Mar 2012 22:49:11,890 TRACE ~ before transaction completion
13 Mar 2012 22:49:11,891 TRACE ~ before transaction completion
13 Mar 2012 22:49:11,892 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:49:11,892 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:49:11,893 TRACE ~ after transaction completion
13 Mar 2012 22:49:11,893 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:49:11,894 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:49:11,895 TRACE ~ after transaction completion
13 Mar 2012 22:49:11,895 TRACE ~ closing session
13 Mar 2012 22:49:11,896 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:49:11,918 DEBUG ~ opened session at timestamp: 13316969519
13 Mar 2012 22:49:11,922 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:49:11,922 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:49:11,923 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:49:11,923 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:49:11,924 DEBUG ~ begin
13 Mar 2012 22:49:11,924 DEBUG ~ opening JDBC connection
13 Mar 2012 22:49:11,925 DEBUG ~ current autocommit status: true
13 Mar 2012 22:49:11,925 DEBUG ~ disabling autocommit
13 Mar 2012 22:49:11,926 TRACE ~ after transaction begin
13 Mar 2012 22:49:11,935 DEBUG ~ commit
13 Mar 2012 22:49:11,935 TRACE ~ automatically flushing session
13 Mar 2012 22:49:11,936 TRACE ~ before transaction completion
13 Mar 2012 22:49:11,936 TRACE ~ before transaction completion
13 Mar 2012 22:49:11,936 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:49:11,937 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:49:11,937 TRACE ~ after transaction completion
13 Mar 2012 22:49:11,938 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:49:11,938 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:49:11,939 TRACE ~ after transaction completion
13 Mar 2012 22:49:11,939 TRACE ~ closing session
13 Mar 2012 22:49:11,940 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:51:26,437 DEBUG ~ opened session at timestamp: 13316970864
13 Mar 2012 22:51:26,437 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:51:26,438 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:51:26,438 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:51:26,438 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:51:26,438 DEBUG ~ begin
13 Mar 2012 22:51:26,439 DEBUG ~ opening JDBC connection
13 Mar 2012 22:51:26,439 DEBUG ~ current autocommit status: true
13 Mar 2012 22:51:26,440 DEBUG ~ disabling autocommit
13 Mar 2012 22:51:26,440 TRACE ~ after transaction begin
13 Mar 2012 22:51:26,445 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:51:26,446 TRACE ~ located HQL query plan in cache (from models.security.User where username = ?)
13 Mar 2012 22:51:26,446 TRACE ~ find: from models.security.User where username = ?
13 Mar 2012 22:51:26,447 TRACE ~ parameters: [admin]
13 Mar 2012 22:51:26,447 TRACE ~ named parameters: {}
13 Mar 2012 22:51:26,448 DEBUG ~ about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
13 Mar 2012 22:51:26,448 TRACE ~ preparing statement
13 Mar 2012 22:51:26,449 TRACE ~ binding parameter [1] as [VARCHAR] - admin
13 Mar 2012 22:51:26,450 TRACE ~ Bound [3] parameters total
13 Mar 2012 22:51:26,450 DEBUG ~ about to open ResultSet (open ResultSets: 0, globally: 0)
13 Mar 2012 22:51:26,450 TRACE ~ processing result set
13 Mar 2012 22:51:26,451 TRACE ~ done processing result set (0 rows)
13 Mar 2012 22:51:26,451 DEBUG ~ about to close ResultSet (open ResultSets: 1, globally: 1)
13 Mar 2012 22:51:26,453 DEBUG ~ about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
13 Mar 2012 22:51:26,454 TRACE ~ closing statement
13 Mar 2012 22:51:26,454 TRACE ~ total objects hydrated: 0
13 Mar 2012 22:51:26,455 DEBUG ~ initializing non-lazy collections
13 Mar 2012 22:51:33,782 INFO  ~ admin is trying to login.
13 Mar 2012 22:52:34,759 DEBUG ~ commit
13 Mar 2012 22:52:34,760 TRACE ~ automatically flushing session
13 Mar 2012 22:52:34,761 TRACE ~ before transaction completion
13 Mar 2012 22:52:34,761 TRACE ~ before transaction completion
13 Mar 2012 22:52:34,762 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:52:34,762 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:52:34,763 TRACE ~ after transaction completion
13 Mar 2012 22:52:34,763 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:52:34,764 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:52:34,764 TRACE ~ after transaction completion
13 Mar 2012 22:52:34,765 TRACE ~ closing session
13 Mar 2012 22:52:34,765 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:52:35,137 DEBUG ~ opened session at timestamp: 13316971551
13 Mar 2012 22:52:35,138 TRACE ~ setting flush mode to: AUTO
13 Mar 2012 22:52:35,139 TRACE ~ setting cache mode to: NORMAL
13 Mar 2012 22:52:35,139 TRACE ~ setting flush mode to: COMMIT
13 Mar 2012 22:52:35,140 DEBUG ~ Trying to set a property which is not supported on entity manager level
13 Mar 2012 22:52:35,140 DEBUG ~ begin
13 Mar 2012 22:52:35,141 DEBUG ~ opening JDBC connection
13 Mar 2012 22:52:35,141 DEBUG ~ current autocommit status: true
13 Mar 2012 22:52:35,142 DEBUG ~ disabling autocommit
13 Mar 2012 22:52:35,142 TRACE ~ after transaction begin
13 Mar 2012 22:52:35,152 DEBUG ~ commit
13 Mar 2012 22:52:35,153 TRACE ~ automatically flushing session
13 Mar 2012 22:52:35,153 TRACE ~ before transaction completion
13 Mar 2012 22:52:35,154 TRACE ~ before transaction completion
13 Mar 2012 22:52:35,154 DEBUG ~ re-enabling autocommit
13 Mar 2012 22:52:35,155 DEBUG ~ committed JDBC Connection
13 Mar 2012 22:52:35,155 TRACE ~ after transaction completion
13 Mar 2012 22:52:35,156 DEBUG ~ aggressively releasing JDBC connection
13 Mar 2012 22:52:35,156 DEBUG ~ releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
13 Mar 2012 22:52:35,157 TRACE ~ after transaction completion
13 Mar 2012 22:52:35,157 TRACE ~ closing session
13 Mar 2012 22:52:35,157 TRACE ~ connection already null in cleanup : no action
13 Mar 2012 22:54:02,815 INFO  ~ closing
